// Generated by view binder compiler. Do not edit!
package edu.uw.tcss450.phishapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import edu.uw.tcss450.phishapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText emailText;

  @NonNull
  public final ConstraintLayout loginLayout;

  @NonNull
  public final EditText passwordText;

  @NonNull
  public final Button registerButton;

  @NonNull
  public final Button signInButton;

  private FragmentLoginBinding(@NonNull ConstraintLayout rootView, @NonNull EditText emailText,
      @NonNull ConstraintLayout loginLayout, @NonNull EditText passwordText,
      @NonNull Button registerButton, @NonNull Button signInButton) {
    this.rootView = rootView;
    this.emailText = emailText;
    this.loginLayout = loginLayout;
    this.passwordText = passwordText;
    this.registerButton = registerButton;
    this.signInButton = signInButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      EditText emailText = rootView.findViewById(R.id.email_text);
      if (emailText == null) {
        missingId = "emailText";
        break missingId;
      }
      ConstraintLayout loginLayout = rootView.findViewById(R.id.login_layout);
      if (loginLayout == null) {
        missingId = "loginLayout";
        break missingId;
      }
      EditText passwordText = rootView.findViewById(R.id.password_text);
      if (passwordText == null) {
        missingId = "passwordText";
        break missingId;
      }
      Button registerButton = rootView.findViewById(R.id.register_button);
      if (registerButton == null) {
        missingId = "registerButton";
        break missingId;
      }
      Button signInButton = rootView.findViewById(R.id.sign_in_button);
      if (signInButton == null) {
        missingId = "signInButton";
        break missingId;
      }
      return new FragmentLoginBinding((ConstraintLayout) rootView, emailText, loginLayout,
          passwordText, registerButton, signInButton);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
